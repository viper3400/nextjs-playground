{
  "x-generator": "NSwag v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "VideoDb API",
    "version": "1.15.0"
  },
  "servers": [
    {
      "url": "http://192.168.0.3:7071"
    }
  ],
  "paths": {
    "/inventory": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Create a new inventory",
        "description": "Provide a name for the new inventory.",
        "operationId": "Inventory_CreateInventory",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryResource"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authorized to use this api."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get all inventories",
        "description": "Returns all recorded inventory.",
        "operationId": "Inventory_GetInventories",
        "parameters": [
          {
            "name": "nameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionWithPagingOfInventoryResource"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authorized to use this api."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/inventory/{Id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get inventory by id",
        "description": "Return an inventory with the given id.",
        "operationId": "Inventory_GetInventory",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryResource"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authorized to use this api."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Inventory"
        ],
        "summary": "Delete inventory",
        "description": "Delete the inventory with the given id.",
        "operationId": "Inventory_DeleteInventory",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authorized to use this api."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/inventory/{Id}/rack/{RackId}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get rack for inventory by id and rack id",
        "description": "Returns a rack.",
        "operationId": "Inventory_GetInventoryRackDataForRack",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "RackId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionWithPagingOfInventoryDataResource"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authorized to use this api."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Post rack for inventory by id and rack id",
        "operationId": "Inventory_PostInventoryRack",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "RackId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "requestBody": {
          "x-name": "inventoryDataResources",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryDataResource"
                }
              }
            }
          },
          "required": true,
          "x-position": 5
        },
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionWithPagingOfInventoryDataResource"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authorized to use this api."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/inventory/{Id}/rack": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get all racks and bays from moviedata for inventory by id and state",
        "description": "Returns racks and states.",
        "operationId": "Inventory_GetInventoryRacks",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryRackModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "You need to be authorized to use this api."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/inventory/{Id}/finish": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Finish inventory",
        "description": "Finishs the inventory with the given id.",
        "operationId": "Inventory_FinishInventory",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryResource"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authorized to use this api."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/inventory/{Id}/abandon": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Abandon inventory",
        "description": "Abandon the inventory with the given id.",
        "operationId": "Inventory_AbandonInventory",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryResource"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authorized to use this api."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata/seen": {
      "post": {
        "tags": [
          "MovieData"
        ],
        "summary": "Set Seen Date",
        "description": "Set a seen date for a movie, the current user and it's current view group. Movie id and the date have to to be passed with request content.User identiy and it's view group is evaluated from Bearer Token.It's not possible to mark a movie as seen twice per day and viewgroup",
        "operationId": "MovieData_SetMovieSeen",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "movieSeenOptions",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MovieSeenOptions"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionWithPagingOfTupleOfIntegerAndString"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "MovieData"
        ],
        "summary": "Get all Seen Dates",
        "description": "Return all seen dates in desc order and the movie which was seen.",
        "operationId": "MovieData_GetMovieSeen",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "FromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "ToDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionWithPagingAndDateFilterOfMovieDataSeenResource"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authorized to use this api."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "MovieData"
        ],
        "operationId": "MovieData_UnSetMovieSeen",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "movieSeenOptions",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MovieSeenOptions"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata": {
      "get": {
        "tags": [
          "MovieData"
        ],
        "operationId": "MovieData_GetMovieData",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Diskid",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "MediaTypes",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Genres",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "IsTv",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "NotSeen",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/MovieDataSortOrder"
            },
            "x-position": 11
          },
          {
            "name": "UseInlineCoverImage",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 12
          },
          {
            "name": "ExactMatch",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 13
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "MovieData"
        ],
        "operationId": "MovieData_GetMovieDataWithFilter",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "movieDataOptions",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MovieDataOptions"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata/surprise": {
      "get": {
        "tags": [
          "MovieData"
        ],
        "operationId": "MovieData_GetMovieDataSurprise",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Diskid",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "MediaTypes",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Genres",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "IsTv",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "NotSeen",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/MovieDataSortOrder"
            },
            "x-position": 11
          },
          {
            "name": "UseInlineCoverImage",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 12
          },
          {
            "name": "ExactMatch",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 13
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata/experiment": {
      "get": {
        "tags": [
          "MovieData"
        ],
        "operationId": "MovieData_GetMovieDataExperiment",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Diskid",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "MediaTypes",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Genres",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "IsTv",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "NotSeen",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/MovieDataSortOrder"
            },
            "x-position": 11
          },
          {
            "name": "UseInlineCoverImage",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 12
          },
          {
            "name": "ExactMatch",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 13
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata/bgimg": {
      "get": {
        "tags": [
          "MovieData"
        ],
        "operationId": "MovieData_GetMovieDataBgImg",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Diskid",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "MediaTypes",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Genres",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "IsTv",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "NotSeen",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/MovieDataSortOrder"
            },
            "x-position": 11
          },
          {
            "name": "UseInlineCoverImage",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 12
          },
          {
            "name": "ExactMatch",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 13
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata/loadbgimg": {
      "get": {
        "tags": [
          "MovieData"
        ],
        "operationId": "MovieData_LoadBgImg",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Diskid",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "MediaTypes",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Genres",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "IsTv",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "IsDeleted",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "NotSeen",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/MovieDataSortOrder"
            },
            "x-position": 11
          },
          {
            "name": "UseInlineCoverImage",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 12
          },
          {
            "name": "ExactMatch",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 13
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata/{movieId}": {
      "get": {
        "tags": [
          "MovieData"
        ],
        "operationId": "MovieData_GetMovieDataById",
        "parameters": [
          {
            "name": "MovieId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "MovieData"
        ],
        "operationId": "MovieData_UpdateOrCreateMovieDataById",
        "parameters": [
          {
            "name": "MovieId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "movieDataResource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MovieDataResource"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata/favorites": {
      "get": {
        "tags": [
          "MovieData"
        ],
        "summary": "Get favorite movies",
        "description": "Get favourite movies for current user.",
        "operationId": "MovieData_GetFavoriteMovies",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionWithPagingOfMovieDataResource"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authorized to use this api."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x": "y"
      }
    },
    "/moviedata/watchagain": {
      "get": {
        "tags": [
          "MovieData"
        ],
        "operationId": "MovieData_GetWatchAgainMovies",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata/watchagain/{movieId}": {
      "post": {
        "tags": [
          "MovieData"
        ],
        "operationId": "MovieData_SetWatchAgainMovies",
        "parameters": [
          {
            "name": "MovieId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "movieUserSettings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MovieUserSetting"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata/favorites/{movieId}": {
      "post": {
        "tags": [
          "MovieData"
        ],
        "operationId": "MovieData_SetFavoriteMovies",
        "parameters": [
          {
            "name": "MovieId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "movieUserSettings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MovieUserSetting"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata/mediatypes": {
      "get": {
        "tags": [
          "MovieData"
        ],
        "operationId": "MovieData_GetAllMediaTypes",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata/genres": {
      "get": {
        "tags": [
          "MovieData"
        ],
        "operationId": "MovieData_GetAllGenres",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata/nextdiskid/{shelterandcompartment}": {
      "get": {
        "tags": [
          "MovieData"
        ],
        "operationId": "MovieData_GetNextFreeDiskId",
        "parameters": [
          {
            "name": "shelterandcompartment",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata/image/cover/{MovieId}": {
      "get": {
        "tags": [
          "MovieData"
        ],
        "summary": "Get image for the given id",
        "description": "Returns movie image as FileContentResult",
        "operationId": "MovieData_GetMovieCoverImage",
        "parameters": [
          {
            "name": "MovieId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionWithPagingAndDateFilterOfMovieDataSeenResource"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authorized to use this api."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata/image/background/{MovieId}": {
      "get": {
        "tags": [
          "MovieData"
        ],
        "summary": "Get background image for the given id",
        "description": "Returns movie image as FileContentResult",
        "operationId": "MovieData_GetMovieBackgroundImage",
        "parameters": [
          {
            "name": "MovieId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionWithPagingAndDateFilterOfMovieDataSeenResource"
                }
              }
            }
          },
          "401": {
            "description": "You need to be authorized to use this api."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviedata/racks": {
      "get": {
        "tags": [
          "MovieData"
        ],
        "summary": "Get all bays",
        "description": "Return a flat list of all bays in all racks.",
        "operationId": "MovieData_GetRacks",
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "You need to be authorized to use this api."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviemeta/searchtitle/{title}": {
      "get": {
        "tags": [
          "MovieMeta"
        ],
        "operationId": "MovieMeta_GetMovieMeta",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Engine",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "BackgroundImageEngine",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "title",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviemeta/{reference}": {
      "get": {
        "tags": [
          "MovieMeta"
        ],
        "operationId": "MovieMeta_GetMovieMetaAsyncById",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "reference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviemeta/searchbarcode/{barcode}": {
      "get": {
        "tags": [
          "MovieMeta"
        ],
        "operationId": "MovieMeta_GetMovieMetaByBarcode",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "barcode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/moviemeta/convert": {
      "post": {
        "tags": [
          "MovieMeta"
        ],
        "operationId": "MovieMeta_ConvertMovieMeta",
        "requestBody": {
          "x-name": "movieMetaResource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MovieMetaResource"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/home": {
      "get": {
        "tags": [
          "Home"
        ],
        "operationId": "Home_Index",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/identity/user": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Add new user",
        "description": "This api adds new user to user repository.",
        "operationId": "Identity_AddUser",
        "requestBody": {
          "x-name": "userModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "If succeeded is false, erros will contain code and description of error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Identity"
        ],
        "summary": "List all users",
        "description": "This api adds new user to user repository.",
        "operationId": "Identity_GetUsers",
        "responses": {
          "200": {
            "description": "List all users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityUser"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/identity/user/{userId}": {
      "delete": {
        "tags": [
          "Identity"
        ],
        "summary": "Delete user.",
        "description": "Delete a user with given Id.",
        "operationId": "Identity_DeleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "If succeeded is false, errosr will contain code and description of error, e.g. if a user with the given id dont exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityUser"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/identity/user/role": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Add user to role",
        "description": "This api adds a role to a user repository.",
        "operationId": "Identity_AddUserToRole",
        "requestBody": {
          "x-name": "userModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "If succeeded is false, erros will contain code and description of error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/identity/user/role/{username}": {
      "get": {
        "tags": [
          "Identity"
        ],
        "summary": "Get Roles for use",
        "description": "Returns all roles for the given user.",
        "operationId": "Identity_GetRolesForUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all roles for this user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/identity/user/role/{username}/{rolename}": {
      "delete": {
        "tags": [
          "Identity"
        ],
        "summary": "Remove role from user.",
        "description": "Delete a role from user.",
        "operationId": "Identity_RemoveRoleFromUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "rolename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "If succeeded is false, errosr will contain code and description of error, e.g. if a user with the given id dont exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityUser"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/identity/password/reset": {
      "put": {
        "tags": [
          "Identity"
        ],
        "summary": "Reset the password of a user",
        "description": "This api resets the password of a given user with a given new password.",
        "operationId": "Identity_ResetPassword",
        "requestBody": {
          "x-name": "userModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "If succeeded is false, erros will contain code and description of error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/identity/password/change": {
      "put": {
        "tags": [
          "Identity"
        ],
        "summary": "Changes the password of a user",
        "description": "This api changes the password of a given user with a given new password. Old password is required.",
        "operationId": "Identity_ChangePassword",
        "requestBody": {
          "x-name": "passwordChangeModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordChangeModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "If succeeded is false, erros will contain code and description of error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/identity/role": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Add role.",
        "description": "Adds a new role to repository",
        "operationId": "Identity_AddRole",
        "requestBody": {
          "x-name": "roleModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "-",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Identity"
        ],
        "summary": "Get roles.",
        "description": "Gets all roles from repository",
        "operationId": "Identity_GetRoles",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityRole"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/identity/role/{roleId}": {
      "delete": {
        "tags": [
          "Identity"
        ],
        "summary": "Delete role.",
        "description": "Delete a role with given Id.",
        "operationId": "Identity_DeleteRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "If succeeded is false, error will contain code and description of error, e.g. if a role with the given id dont exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/info": {
      "get": {
        "tags": [
          "Info"
        ],
        "operationId": "Info_Index",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/": {
      "get": {
        "tags": [
          "Root"
        ],
        "operationId": "Root_GetRoot",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/token": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Request new bearer token.",
        "description": "This api returns a bearer token for given user information. If no password is given or password is emtpy, the apimasterkey will be used to authenticate the user.",
        "operationId": "Token_Create",
        "requestBody": {
          "x-name": "loginModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/token/refresh": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Refresh a bearer token.",
        "description": "This api refreshs a token. The token may be expired. A valid refresh token must be provided.",
        "operationId": "Token_Refresh",
        "requestBody": {
          "x-name": "refreshTokenModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/token/signout": {
      "post": {
        "tags": [
          "Token"
        ],
        "operationId": "Token_UserSignOut",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/token/profile": {
      "get": {
        "tags": [
          "Token"
        ],
        "operationId": "Token_GetUserProfile",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/galleryadmin/renew-thumbs": {
      "get": {
        "tags": [
          "GalleryAdmin"
        ],
        "summary": "Get all albums",
        "description": "Returs all albums in gallery.",
        "operationId": "GalleryAdmin_RenewThumbs",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/gallery/album": {
      "get": {
        "tags": [
          "Gallery"
        ],
        "summary": "Get all albums",
        "description": "Returs all albums in gallery.",
        "operationId": "Gallery_GetAlbum",
        "parameters": [
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/gallery/album/{Id}": {
      "get": {
        "tags": [
          "Gallery"
        ],
        "summary": "Get all images from album.",
        "description": "Get all images from album.",
        "operationId": "Gallery_GetAlbumById",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "Offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100.0,
              "minimum": 1.0,
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/gallery/image/{Id}": {
      "get": {
        "tags": [
          "Gallery"
        ],
        "summary": "Get image",
        "description": "Returs a json containig a base64enc image.",
        "operationId": "Gallery_GetStreamingImage",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "InventoryResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "starttime": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endtime": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "state": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "Resource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Link"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false
          }
        ]
      },
      "Link": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "href": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string",
            "default": "GET",
            "nullable": true
          },
          "rel": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CollectionWithPagingOfInventoryResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionOfInventoryResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "offset": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "limit": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "format": "int64"
              },
              "first": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "previous": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "next": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "last": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              }
            }
          }
        ]
      },
      "CollectionOfInventoryResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/InventoryResource"
                }
              }
            }
          }
        ]
      },
      "CollectionWithPagingOfInventoryDataResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionOfInventoryDataResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "offset": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "limit": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "format": "int64"
              },
              "first": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "previous": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "next": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "last": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              }
            }
          }
        ]
      },
      "CollectionOfInventoryDataResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/InventoryDataResource"
                }
              }
            }
          }
        ]
      },
      "InventoryDataResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "id",
              "inventoryid",
              "movieid"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "state": {
                "type": "integer",
                "format": "int32"
              },
              "inventoryid": {
                "type": "integer",
                "format": "int32"
              },
              "movieid": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "InventoryRackModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rackId": {
            "type": "string",
            "nullable": true
          },
          "rackState": {
            "$ref": "#/components/schemas/InventoryDataState"
          },
          "rackInventoryState": {
            "$ref": "#/components/schemas/InventoryState"
          }
        }
      },
      "InventoryDataState": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "NotChecked",
          "Found",
          "Missing"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "InventoryState": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "NotStarted",
          "Started",
          "Finished",
          "Abandoned"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "CollectionWithPagingOfTupleOfIntegerAndString": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionOfTupleOfIntegerAndString"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "offset": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "limit": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "format": "int64"
              },
              "first": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "previous": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "next": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "last": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              }
            }
          }
        ]
      },
      "CollectionOfTupleOfIntegerAndString": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/TupleOfIntegerAndString"
                }
              }
            }
          }
        ]
      },
      "TupleOfIntegerAndString": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "item1": {
            "type": "integer",
            "format": "int32"
          },
          "item2": {
            "type": "string"
          }
        }
      },
      "MovieSeenOptions": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "date"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "CollectionWithPagingAndDateFilterOfMovieDataSeenResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionOfMovieDataSeenResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "offset": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "limit": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "format": "int64"
              },
              "first": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "previous": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "next": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "last": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "fromDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "toDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      },
      "CollectionOfMovieDataSeenResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/MovieDataSeenResource"
                }
              }
            }
          }
        ]
      },
      "MovieDataSeenResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "seenDate": {
                "type": "string",
                "format": "date-time"
              },
              "movie": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/MovieDataResource"
                  }
                ]
              }
            }
          }
        ]
      },
      "MovieDataResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "id",
              "title",
              "owner_id"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "md5": {
                "type": "string",
                "nullable": true
              },
              "title": {
                "type": "string",
                "minLength": 1
              },
              "subtitle": {
                "type": "string",
                "nullable": true
              },
              "language": {
                "type": "string",
                "nullable": true
              },
              "diskid": {
                "type": "string",
                "nullable": true
              },
              "comment": {
                "type": "string",
                "nullable": true
              },
              "disklabel": {
                "type": "string",
                "nullable": true
              },
              "imdbID": {
                "type": "string",
                "nullable": true
              },
              "year": {
                "type": "integer",
                "format": "int32"
              },
              "imgurl": {
                "type": "string",
                "nullable": true
              },
              "director": {
                "type": "string",
                "nullable": true
              },
              "actors": {
                "type": "string",
                "nullable": true
              },
              "runtime": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "country": {
                "type": "string",
                "nullable": true
              },
              "plot": {
                "type": "string",
                "nullable": true
              },
              "rating": {
                "type": "string",
                "nullable": true
              },
              "filename": {
                "type": "string",
                "nullable": true
              },
              "filesize": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "filedate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "audio_codec": {
                "type": "string",
                "nullable": true
              },
              "video_codec": {
                "type": "string",
                "nullable": true
              },
              "video_width": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "video_height": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "istv": {
                "type": "boolean"
              },
              "lastupdate": {
                "type": "string",
                "format": "date-time"
              },
              "mediatype": {
                "type": "integer",
                "format": "int32"
              },
              "custom1": {
                "type": "string",
                "nullable": true
              },
              "custom2": {
                "type": "string",
                "nullable": true
              },
              "custom3": {
                "type": "string",
                "nullable": true
              },
              "custom4": {
                "type": "string",
                "nullable": true
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "owner_id": {
                "type": "integer",
                "format": "int32"
              },
              "videoOwner": {
                "type": "string",
                "nullable": true
              },
              "genres": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/MovieDataGenreResource"
                }
              },
              "lastSeenInformation": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/LastSeenInformation"
                  }
                ]
              },
              "isFavorite": {
                "type": "boolean"
              },
              "isFlagged": {
                "type": "boolean"
              },
              "coverImageBase64Enc": {
                "type": "string",
                "format": "byte",
                "nullable": true
              },
              "mediaTypeName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "MovieDataGenreResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "LastSeenInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "lastSeenDate": {
            "type": "string",
            "format": "date-time"
          },
          "seenCount": {
            "type": "integer",
            "format": "int32"
          },
          "daysSinceLastView": {
            "type": "integer",
            "format": "int32"
          },
          "lastSeenSentence": {
            "type": "string",
            "nullable": true
          },
          "readableTimeSinceLastViewHtml": {
            "type": "string",
            "nullable": true
          },
          "allSeenDates": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "MovieDataSortOrder": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "ByDiskIdAsc",
          "ByLastSeenDateAsc"
        ],
        "enum": [
          0,
          1
        ]
      },
      "MovieDataOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "diskid": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "search": {
            "type": "string",
            "nullable": true
          },
          "mediaTypes": {
            "type": "string",
            "nullable": true
          },
          "genres": {
            "type": "string",
            "nullable": true
          },
          "isTv": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "string",
            "nullable": true
          },
          "notSeen": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "$ref": "#/components/schemas/MovieDataSortOrder"
          },
          "useInlineCoverImage": {
            "type": "boolean"
          },
          "exactMatch": {
            "type": "boolean"
          }
        }
      },
      "CollectionWithPagingOfMovieDataResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionOfMovieDataResource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "offset": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "limit": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "format": "int64"
              },
              "first": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "previous": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "next": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              },
              "last": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Link"
                  }
                ]
              }
            }
          }
        ]
      },
      "CollectionOfMovieDataResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/MovieDataResource"
                }
              }
            }
          }
        ]
      },
      "MovieUserSetting": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isFavorite": {
            "type": "boolean"
          },
          "isFlagged": {
            "type": "boolean"
          }
        }
      },
      "MovieMetaResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "metaEngine": {
                "type": "string",
                "nullable": true
              },
              "reference": {
                "type": "string",
                "nullable": true
              },
              "title": {
                "type": "string",
                "nullable": true
              },
              "subTitle": {
                "type": "string",
                "nullable": true
              },
              "originalTitle": {
                "type": "string",
                "nullable": true
              },
              "year": {
                "type": "string",
                "nullable": true
              },
              "productionCountry": {
                "type": "string",
                "nullable": true
              },
              "imgUrl": {
                "type": "string",
                "nullable": true
              },
              "backgroundImgUrl": {
                "type": "string",
                "nullable": true
              },
              "length": {
                "type": "string",
                "nullable": true
              },
              "actors": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/MovieMetaActorModel"
                }
              },
              "plot": {
                "type": "string",
                "nullable": true
              },
              "rating": {
                "type": "string",
                "nullable": true
              },
              "editions": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/MovieMetaEditionModel"
                }
              },
              "genres": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "barcode": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "MovieMetaActorModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "metaEngine": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "actorName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MovieMetaEditionModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "metaEngine": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "string",
            "nullable": true
          },
          "barcode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "IdentityResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "succeeded": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityError"
            }
          }
        }
      },
      "IdentityError": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "UserModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IdentityUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdentityUserOfString"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "IdentityUserOfString": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserPasswordChangeModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userName": {
            "type": "string",
            "nullable": true
          },
          "currentPassword": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RoleModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "roleName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "IdentityRole": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdentityRoleOfString"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "IdentityRoleOfString": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LoginModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "apiMasterkey": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RefreshTokenModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "refreshSessionIdentifier": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ],
  "tags": [
    {
      "name": "Inventory",
      "description": "ApiController to handle inventory operations."
    },
    {
      "name": "MovieData",
      "description": "ApiController to handle movie data operations."
    },
    {
      "name": "Identity",
      "description": "ApiController to handle user identities."
    },
    {
      "name": "GalleryAdmin",
      "description": "ApiController for gallery admin functions."
    },
    {
      "name": "Gallery",
      "description": "ApiController for gallery functions."
    }
  ]
}